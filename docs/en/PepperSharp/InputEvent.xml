<Type Name="InputEvent" FullName="PepperSharp.InputEvent">
  <TypeSignature Language="C#" Value="public class InputEvent : PepperSharp.Resource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputEvent extends PepperSharp.Resource" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.PepperSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>PepperSharp.Resource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public PepperSharp.PPInputEventType EventType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype PepperSharp.PPInputEventType EventType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>PepperSharp.PPInputEventType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Returns the type of input event for this input event object.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Boolean value that is set to true if the event was handled, false if not. If you have
             registered to filter this class of events by calling <code>RequestFilteringInputEvents</code>, 
             and you return false, the event will be forwarded to the page (and eventually the browser)
             for the default handling. For non-filtered events, the set value of this property
             will be ignored.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public PepperSharp.PPInputEventModifier Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype PepperSharp.PPInputEventModifier Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>PepperSharp.PPInputEventModifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Returns a bitfield indicating which modifiers were down
             at the time of the event. This is a combination of the flags in the
             <code>PPInputEventModifier</code> enum.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeStamp">
      <MemberSignature Language="C#" Value="public double TimeStamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TimeStamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Returns the time that the event was generated. The time
             will be before the current time since processing and dispatching the
             event has some overhead. Use this value to compare the times the user
             generated two events without being sensitive to variable processing time.
            
             The return value is in time ticks, which is a monotonically increasing
             clock not related to the wall clock time. It will not change if the user
             changes their clock or daylight savings time starts, so can be reliably
             used to compare events. This means, however, that you can't correlate
             event times to a particular time of day on the system clock.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
